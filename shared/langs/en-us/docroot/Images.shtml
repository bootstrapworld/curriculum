<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="generator" content="Asciidoctor 2.0.17">
  <title>Images and Attributions</title>
  <link rel="stylesheet" href="lib/curriculum.css" />
  <script src="lib/bootstraplesson.js"></script>
  <script src="images.js"></script>
  <script src="dependency-graph.js"></script>
  <script src="pathway-tocs.js"></script>
  <script>var pathway;</script>
  <style>
    table { width: 100%; table-layout:fixed; }
    td:first-of-type, th:first-of-type { text-align: center !important; }
    td { word-break: break-word; font-size: 10pt !important; }
    table img { width: 100%; display: block; }
  </style>
</head>
<body class="narrativepage article">
<!--#include virtual="/menubar.ssi"-->
<div id="body">
  <div id="header">
    <h1>Images and Attributions</h1>
  </div>
  <div id="content">
    <div class="paragraph">
      Bootstrap uses images from many sources, and believes in responsible attribution. The table below lists all images used in your selected lessons or pathway.
    </div>
    <table>
      <colgroup>
        <col style="width: 10%;">
        <col style="width: 10%;">
        <col style="width: 20%;">
        <col style="width: 10%;">
      </colgroup>
      <thead>
        <th>Image</th>
        <th>Lesson</th>
        <th>Source/Attribution</th>
        <th>License</th>
      </thead>
      <tbody id="imageTable">
      </tbody>
    </table>
  </div>
</div>
<div id="footer">
  <div id="footer-text">
    Last updated 2022-11-21 11:51:46 -0500
  </div>
</div>
<script>

  // filename.type -> sha1(filename).type
  async function sha1(source) {
    const type = source.substring(source.lastIndexOf('.'), source.length);
    const name = source.substring(0, source.lastIndexOf('.'));

    const sourceBytes = new TextEncoder().encode(name);
    const digest = await crypto.subtle.digest("SHA-1", sourceBytes);
    const resultBytes = [...new Uint8Array(digest)];
    const result = resultBytes.map(x => x.toString(16).padStart(2, '0')).join("");
    return result.slice(0, 16) + type;
  }

  // given metadata for an image, add a hash field represending the sha1 of the filename
  async function addHashes(metadata) {
    return sha1(metadata.filename).then(hash => ({
      hash: hash, ...metadata
    }))
  }

  // grab the image table, and build an array of all the image metadata
  const table = document.getElementById("imageTable");
  const metadata = Array.prototype.concat(
    ...Object.keys(images)
      .map(lesson => Object.keys(images[lesson])
        .map(image => ({
            lesson: lesson,
            filename: image,
            ...images[lesson][image]
          }))));

  // Once the whole array has hashed filenames, build the table from the metadata
  Promise.all(metadata.map(addHashes)).then(result => {
    result.forEach(r => {
      //if (r.source == "Created by the Bootstrap Team") return;
      const row = document.createElement("tr");
      if(!r.lesson || !r.source || !r.license) row.style.background = "red";
      row.innerHTML = `
        <td>
          <img src="lessons/${r.lesson}/images/${r.hash}" alt="${r.filename}"/>
        </td>
        <td><a href="lessons/${r.lesson}/">${graph[r.lesson].title}</a></td>
        <td>${r.source}</td>
        <td>${r.license}</td>`;
      table.appendChild(row);
    })
  });
</script>
</body>
</html>