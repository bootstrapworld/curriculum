<!DOCTYPE html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
    <title>Bootstrap: Materials</title>
    <link rel="stylesheet" href="lib/curriculum.css">
    <link rel="stylesheet" type="text/css" href="https://www.BootstrapWorld.org/styles.css"/>
    <style>
        .logo img { width: 300px; }
        dl { counter-reset: term; }

        dl > dt:before {
            counter-increment: term;
            content: counter(term) ".";
            margin-right: 5px;
        }
    </style>
    <script src="dependency-graph.js"></script>
    <script>
        function populateLessons() {
            var search = location.search.substring(1);
            var {title, lessons} = JSON.parse('{"' + decodeURI(search).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g,'":"') + '"}');
            lessons = lessons.split(",");
            console.log(title, lessons);
            document.getElementById('pathwayTitle').innerHTML = title;
            var lessonList = document.getElementById('lesson-list').children[0];
            lessons.forEach(l => {
                var lesson = graph[l];
                var dt = document.createElement('dt');
                dt.className = "hdlist1";
                dt.innerHTML = `
                    <dt class="hdlist1"><a href="./lessons/${l}/index.shtml">${lesson.title}</a></dt>
                        <dd>
                            <p>${lesson.description}</p>
                        </dd>
                `;
                lessonList.appendChild(dt);
            });

            // update the list of accessible lessons
            var accessibleList = document.getElementById('accessible-lesson-list');
            var accessible =  Object.getOwnPropertyNames(graph)
                .filter(name => graph[name].prerequisites
                    .every(p => lessons.includes(p)))
                .filter(name => !lessons.includes(name))
                .sort((a,b) => 
                graph[a].prerequisites.length > graph[b].prerequisites.length? 1 : -1);
            console.log('lessons are', lessons);
            console.log('accessible', accessible);

            accessible.forEach(l => {
                var li = document.createElement('li');
                li.innerHTML = graph[l].title;
                accessibleList.appendChild(li);
            });
        }

    </script>
</head>

<body class="narrativepage article narrative pyret" onload="populateLessons()">
    <!--#include virtual="/menubar.ssi" -->
    <div id="body">
        <div id="header">
            <h1 id="pathwayTitle" style="border-bottom: none;"></h1>
        </div>
        <div id="content">
            <div id="preamble_disabled" class="lessonSummary">
                <div class="sect1">
                    <div class="paragraph">
                        <p>This is a custom pathway, created just for you. <b>Be sure to bookmark this page</b>, so that you can return to it!</p>
                    </div>
                </div>
            </div>

        <div class="clearfix item bottom-border">
            <h2>Lesson Plans</h2>
            <div class="sectionbody">
                <div id="lesson-list" class="dlist">
                    <dl>
                    </dl>
                </div>
            </div>
        </div>

        <div class="clearfix item bottom-border">
            <h2>What's Next?</h2>
            <p/>
            Once your students have finished this pathway, there are plenty of other Bootstrap lessons your students are ready to dive into - without any additional !
            <ul id="accessible-lesson-list">
            </ul>
        </div>
    </div>
</body>
</html>
