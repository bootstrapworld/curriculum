{
  "draw-state-2-num": {
    "text":"Write the draw-state function for a reactor using a state containing two numbers."
  },
  "draw-state-1-num": {
    "text" :"Write the draw-state function for a reactor using a state containing one number."
  },
  "state-from-animation": {
    "text":"Use data structures to model the state of an animation."
  },
  "add-splash": {
    "text":"Add a splash screen to a reactor animation."
  },
  "add-timer": {
    "text":"Use a timer to add a collision animation to a reactor animation."
  },
  "add-score-state": {
    "text":"Add a score field to the gameState structure."
  },
  "add-score-draw": {
    "text":"Modify the draw-state function to display the score on the screen."
  },
  "add-score-tick": {
    "text":"Modify the next-state-tick function to increment or decrement the score."
  },
  "manage-complexity":{
    "text":"Use nested structures to manage complexity in a sophisticated game."
  },
  "refactor": {
    "text":"Refactor existing code to simplify it, preserving the original code's behavior."
  },
  "add-collision":{
    "text": "Add collision-detection to a reactor-based game."
  },
  "add-level":{
    "text":"Add a second level - with a different background image - to an existing reactor-based game."
  },
  "make-animation":{
    "text":"Combine next-state-tick and draw-state creatively to build an animation."
  },
  "when-use-data-structures" : {
    "text":"Identify programming patterns that require data structures."
  },
  "constructors-accessors":{
    "text":"Use and explain constructors and accessors."
  }
}


 
