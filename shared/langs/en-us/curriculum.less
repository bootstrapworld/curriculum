/* Base: asciidoctor CSS, followed by the website stylesheet */
@import (less) url("../../../lib/asciidoctor.less");
@import (inline)'https://www.bootstrapworld.org/styles.css';

/* Additional base rules */
html { font-size: 9pt; }
body { width: 100%; }

/* Add our curriculum-specific CSS */
@import (less) url("../../../lib/core.less");

/* And now our english-specific rules */
.handout::before {content: "Handout: ";}
.optionaltag::before { content: "Optional: "; }
.optpara::before { content: "Optional"; }

/*****************************************************
 * Proglang-Specific Strings
 */
.pyret {
  .other-proglang::before {
    content: "This lesson plan has students programming in Pyret. ";
  }
}
.wescheme {  
  .other-proglang::before {
    content: "This lesson plan has students programming in WeScheme. ";
  }
}
.codap {
 .other-proglang::before {
    content: "This lesson plan has students use CODAP. ";
  }
}

/*****************************************************
 * DESIGN RECIPE
 */
div#body.workbookpage .recipe_word_problem p::before      { content: 'Directions: '; }
div#body.workbookpage .recipe_name .ruby::after           { content: "function name"; }
div#body.workbookpage.codap .recipe_name .ruby::after     { content: "Transformer name"; }

div#body.workbookpage .recipe_purpose .ruby::after        { content: "what does the function do?"; }
div#body.workbookpage.codap .recipe_purpose .ruby::after  { content: "Purpose: what does the formula do for each row?"; }

div#body.workbookpage .recipe_domain .ruby::after         { content: "Domain"; }
div#body.workbookpage .recipe_range .ruby::after          { content: "Range"; }
div#body.workbookpage .recipe_variables .ruby::after      { content: "variable(s)"; }
div#body.workbookpage .recipe_example_inputs .ruby::after { content: "input(s)"; }
div#body.workbookpage .recipe_example_body .ruby::after {
  content: "what the function produces";
}
div#body.workbookpage .recipe_definition_body .ruby::after{
  content: "what the function does with those variable(s)"; 
}

div#body.workbookpage.codap .codap_example_tables+table { border-width: 0; }
div#body.workbookpage.codap .codap_example_tables+table>tbody>tr>td{ padding-top: 0; }

div#body.workbookpage.codap .recipe_formula .ruby::after {
  content: 'i.e. Weight < 20 or Species = "rabbit". Pay careful attention to capitalization and quotation marks.';
}

div#body.workbookpage.codap .ExampleTableTitle { text-align:  center; font-size: 0.7rem;}
div#body.workbookpage.codap .ExampleTableTitle p { font-weight: bold; min-height: unset; }

/*****************************************************
 * DATA CYCLE 
 */
div#body.workbookpage .data-cycle-question .ruby::after { content: "What question do you have?"; }
div#body.workbookpage .data-cycle-type-of-question::after { content: "What type of question is this? (circle one) "; }
div#body.workbookpage .data-cycle-lookup::after     { content: " Lookup "; }
div#body.workbookpage .data-cycle-arithmetic::after { content: " Arithmetic "; }
div#body.workbookpage .data-cycle-statistical::after{ content: " Statistical "; }
div#body.workbookpage .data-cycle-rows .ruby::after {
  content: "Which Rows should we investigate? (All the rows, just the cats, fixed dogs, etc.)";
}
div#body.workbookpage .data-cycle-cols .ruby::after   { content: "What Column(s) do we need? (age, weight-in-kilograms, weeks, etc.)"; }
div#body.workbookpage .data-cycle-filter .ruby::after {
  content: "If you only need some rows, define your filter function here (Need help? Use the Design Recipe!)";
}
div#body.workbookpage.codap .data-cycle-filter .ruby::after {
  content:  "If you only need some rows, write an expression for your Filter Transformer here."
}
div#body.workbookpage .data-cycle-build .ruby::after {
  content: "If you need to make a new column, define your builder function here (Need help? Use the Design Recipe!)";
}
div#body.workbookpage.codap .data-cycle-build .ruby::after{
  content: "If you need to Transform or Build an attribute, write the expression for your Transformer here.";
}
div#body.workbookpage .data-cycle-expression .ruby::after   { content: "What code will make the table or display you want?"; }
div#body.workbookpage.codap .data-cycle-expression .ruby::after   { content: "What display, measure, or table do you want to create (i.e., median, bar chart, scatterplot, etc.)?"; }

div#body.workbookpage .data-cycle-finding .ruby::after      { content: "What did you find out? What can you infer?"; }
div#body.workbookpage .data-cycle-new-question .ruby::after { content: "What - if any - new question(s) does this raise?"; }
