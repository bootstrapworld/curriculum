include $(MAKE_DIR)utils.mk

phase1: initialization .git/hooks/pre-commit node_modules courses-and-lessons page-not-found glossary bootstraplessonjs starterFiles assessments learningObjectives dictionaries citations

###############################################################################

initialization:
	@. ${HOME}/.nvm/nvm.sh && nvm use 22.5
	@touch pathways/__sample/langs/en-us/lesson-order.txt
	@mkdir -p $(PROGDIR)
	@$(MAKE_DIR)dir-hoist-timestamp.sh pathways lessons
	@$(CP) -upr shared/langs/en-us/* $(PROGDIR)
	@$(CP) -upr lib/codemirror.css distribution/$(NATLANG)/lib
	@node_modules/less/bin/lessc shared/langs/$(NATLANG)/curriculum.less > distribution/$(NATLANG)/lib/curriculum.css	
	@if test $(NATLANG) != en-us -a -d shared/langs/$(NATLANG); then \
		$(CP) -upr shared/langs/$(NATLANG)/* $(PROGDIR); fi
	@mkdir -p distribution/$(NATLANG)/lib/Badges
	@mkdir -p distribution/$(NATLANG)/lib/images
	@mkdir -p distribution/$(NATLANG)/lib/fonts
	@mkdir -p distribution/$(NATLANG)/lib/.cached
	@$(CP) -upr $(PROGDIR)/Badges/* distribution/$(NATLANG)/lib/Badges
	@$(CP) -upr $(PROGDIR)/images/* distribution/$(NATLANG)/lib/images
	@$(CP) -upr shared/langs/en-us/docroot/* distribution/$(NATLANG)
	@if test $(NATLANG) != en-us -a -d shared/langs/$(NATLANG)/docroot; then \
		$(CP) -upr shared/langs/$(NATLANG)/docroot/* distribution/$(NATLANG); fi
	@mkdir -p distribution/$(NATLANG)/pages/.cached
	@mkdir -p distribution/$(NATLANG)/textbooks/.cached
	@$(CP) -p lib/*.html $(PROGDIR)
	@$(CP) -p lib/*.rkt $(PROGDIR)
	@$(CP) -p lib/*.json $(PROGDIR)
	@$(CP) -p lib/*.pdf distribution/$(NATLANG)/lib
	@$(CP) -p lib/*.css distribution/$(NATLANG)/lib
	@$(CP) -p lib/[!b]*.js distribution/$(NATLANG)/lib
	@$(CP) -p lib/images/*.png distribution/$(NATLANG)/lib/images
	@$(CP) -pr lib/fonts/* distribution/$(NATLANG)/lib/fonts
	@rm -f $(MAKE_ERR_LOG) $(ADOC_INPUT) $(PUPPETEER_INPUT)
	@echo 'return {' > $(SETUP_PATHWAYINDEPENDENT)
	@echo 'return {' > $(SETUP_WORKBOOKPAGE)
	@echo 'return {' > $(SETUP_LESSONPLAN)
	@echo 'return {' > $(SETUP_PATHWAYRESOURCE)
	@echo 'return {' > $(SETUP_PATHWAYNARRATIVE)
	@echo 'return {' > $(SETUP_PATHWAYINDEPENDENT_PDF)
	@echo 'return {' > $(SETUP_WORKBOOKPAGE_PDF)
	@echo 'return {' > $(SETUP_LESSONPLAN_PDF)
	@echo 'return {' > $(SETUP_PATHWAYRESOURCE_PDF)
	@echo 'return {' > $(SETUP_CONTRACTS_PDF)
	@echo 'return {' > $(IGNORABLE_DIRECTORIES)

# fixme: once logic is set, split above into actual rules to reduce re-doing,
# but I don't think it buys us much

node_modules:
	npm explore npm/node_modules/@npmcli/run-script -g -- npm_config_global=false npm install node-gyp@latest
	npm install

.git/hooks/pre-commit: lib/maker/git-pre-commit-hook.sh
	@echo ➤ Install Git pre-commit hook
	@cp -p $< $@

###############################################################################

the-lessons := $(wildcard \
	lessons/*/langs/$(NATLANG) \
	lessons/*/*/langs/$(NATLANG) \
	lessons/*/*/*/langs/$(NATLANG) \
	)

the-distribution-lessons := $(patsubst %,distribution/$(NATLANG)/lessons/%, \
                                $(notdir \
                                  $(patsubst %/langs/$(NATLANG),%, \
                                    $(the-lessons))))

curr-bare-name = $(notdir $(patsubst %/langs/$(NATLANG),%,$1))

copy-lessons: $(the-distribution-lessons)
	@echo "  " • Updated distribution/$(NATLANG)/lessons 

define make-copy-lesson-rule
distribution/$(NATLANG)/lessons/$(call curr-bare-name,$1): $1
	@$(MAKE_DIR)massage-distribution-lesson.sh $$< $$@

endef

$(eval $(foreach lesson,$(the-lessons),$(call make-copy-lesson-rule,$(lesson))))

#########################################################################

ifndef COURSE
	the-pathways := $(wildcard pathways/*/langs/$(NATLANG))
else
	the-pathways := $(patsubst %,pathways/%/langs/$(NATLANG), \
		$(subst $(COMMACHAR),$(SPACECHAR),$(COURSE)))
endif

the-courses := $(patsubst %,distribution/$(NATLANG)/courses/%, \
                  $(notdir \
                     $(patsubst %/langs/$(NATLANG),%, \
                        $(the-pathways))))

copy-pathways: $(the-courses)
	@echo "  " • Updated distribution/$(NATLANG)/courses 

define make-copy-pathway-rule
distribution/$(NATLANG)/courses/$(call curr-bare-name,$1): $1
	@$(MAKE_DIR)massage-course.sh $$< $$@

endef

$(eval $(foreach pathway,$(the-pathways),$(call make-copy-pathway-rule,$(pathway))))

###############################################################################

page-not-found: distribution/$(NATLANG)/lib/page-not-found.adoc

distribution/$(NATLANG)/lib/page-not-found.adoc:
	@echo = PAGE NOT FOUND! > distribution/$(NATLANG)/lib/page-not-found.adoc
	@echo >> distribution/$(NATLANG)/lib/page-not-found.adoc

###############################################################################

glossary: distribution/$(NATLANG)/lib/bilingual-glossary.adoc

distribution/$(NATLANG)/lib/bilingual-glossary.adoc: lib/glossary-terms.json
	@echo ➤ Build $@
	@$(MAKE_DIR)make-bilingual-glossary.lua $< $@

###############################################################################

bootstraplessonjs: distribution/$(NATLANG)/lib/bootstraplesson.js

distribution/$(NATLANG)/lib/bootstraplesson.js: lib/bootstraplesson.js
	@cat $< | $(SED) -e 's/^const proglangs.*/const proglangs = "$(ALL_PROGLANGS)".split(new RegExp(" \\+"));/' > $@

###############################################################################

starterFiles: distribution/$(NATLANG)/starterFiles.js

distribution/$(NATLANG)/starterFiles.js: $(PROGDIR)/combine-dicts.js $(PROGDIR)/starterFiles
	@echo ➤ Build $@
	@node $+ $@

###############################################################################

assessments: distribution/$(NATLANG)/assessments.js

distribution/$(NATLANG)/assessments.js: $(PROGDIR)/combine-dicts.js $(PROGDIR)/assessments
	@echo ➤ Build $@
	@node $+ $@

###############################################################################

dictionaries: distribution/$(NATLANG)/lib/dictionaries.js

alignment-dictionaries := $(wildcard \
	shared/langs/en-us/standards/*.json \
	shared/langs/en-us/textbooks/*.json \
	shared/langs/en-us/practices/*.json)

distribution/$(NATLANG)/lib/dictionaries.js: $(alignment-dictionaries)
	@echo ➤ Build $@
	@$(MAKE_DIR)make-json-dict.lua $@

###############################################################################

learningObjectives: distribution/$(NATLANG)/learningObjectives.js

distribution/$(NATLANG)/learningObjectives.js: $(PROGDIR)/combine-dicts.js $(PROGDIR)/learningObjectives
	@echo ➤ Build $@
	@node $+ $@


###############################################################################

citations: distribution/$(NATLANG)/citations.js

distribution/$(NATLANG)/citations.js: $(PROGDIR)/combine-dicts.js $(PROGDIR)/citations
	@echo ➤ Build $@
	@node $+ $@

###############################################################################

courses-and-lessons: copy-lessons copy-pathways
	@if test -f "$(SCRATCHFILE)"; then rm -f $(SCRATCHFILE); else $(MAKE_DIR)double-check-distribution-lessons.sh; fi
	@echo ➤ Collect exercises information
	@$(MAKE_DIR)collect-distribution-info.lua
	@find . -name \.proglang-ignore | $(SED) -e 's/\/\.proglang-ignore.*//' | sed -e 's/^\.\/\(.*\)/"\1",/' >> $(IGNORABLE_DIRECTORIES)
