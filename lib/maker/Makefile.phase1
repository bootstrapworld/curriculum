# last modified 2023-02-28

include $(MAKE_DIR)utils.mk

# all: initialization

all: courses-and-lessons page-not-found glossary

###############################################################################

initialization: distribution/$(NATLANG)/extlib/mathjax/.
	@mkdir -p $(PROGDIR)
	@mkdir -p distribution/$(NATLANG)/lib
	@$(CP) -upr shared/langs/en-us/* $(PROGDIR)
	@$(CP) -upr shared/langs/en-us/*.css distribution/$(NATLANG)/lib
	@if test $(NATLANG) != en-us -a -d shared/langs/$(NATLANG); then \
		$(CP) -upr shared/langs/$(NATLANG)/* $(PROGDIR); fi
	@mkdir -p distribution/$(NATLANG)/lib/Badges
	@mkdir -p distribution/$(NATLANG)/lib/images
	@$(CP) -upr $(PROGDIR)/Badges/* distribution/$(NATLANG)/lib/Badges
	@$(CP) -upr $(PROGDIR)/images/* distribution/$(NATLANG)/lib/images
	@$(CP) -upr shared/langs/en-us/docroot/* distribution/$(NATLANG)
	@if test $(NATLANG) != en-us -a -d shared/langs/$(NATLANG)/docroot; then \
		$(CP) -upr shared/langs/$(NATLANG)/docroot/* distribution/$(NATLANG); fi
	@$(CP) -p lib/*.html $(PROGDIR)
	@$(CP) -p lib/*.rkt $(PROGDIR)
	@$(CP) -p lib/*.sh $(PROGDIR)
	@$(CP) -p lib/ano* $(PROGDIR)
	@$(CP) -p lib/check* $(PROGDIR)
	@$(CP) -p lib/.hta* $(PROGDIR)
	@$(CP) -p lib/*.css distribution/$(NATLANG)/lib
	@$(CP) -p lib/*.js* distribution/$(NATLANG)/lib
	@$(CP) -p lib/*.less distribution/$(NATLANG)/lib
	@$(CP) -p lib/*.png distribution/$(NATLANG)/lib
	@for f in distribution/$(NATLANG)/lib/*.less; do \
		if test -f "$$f"; then \
		node_modules/less/bin/lessc "$$f" "$${f%.less}.css"; fi; done
	@$(CP) -p shared/langs/en-us/*.css distribution/$(NATLANG)/lib
	@mkdir -p distribution/$(NATLANG)/.cached
	@rm -f $(ADOC_INPUT) $(ADOC_POSTPROC_PWYINDEP_INPUT) \
		$(EXERCISE_COLLECTOR_INPUT) $(COURSES_LIST_FILE)
	@if test -n "$(ASCIIDOCTOR_NODE)"; then echo "let adocFiles = [" > $(ADOC_INPUT); fi
	@if test -n "$(BOOK)"; then echo "{\"htmlFileSpecs\": [ \"ignoreElement\"" > $(PUPPETEER_INPUT); fi
	@echo 'return {' > $(COURSES_LIST_FILE)
	@echo 'return {' > $(EXERCISE_COLLECTOR_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_LESSONPLAN_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_NARRATIVEAUX_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_NARRATIVE_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_RESOURCES_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_PWYINDEP_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_WORKBOOKPAGE_INPUT)
	@echo '(' > $(ADOCABLES_INPUT)

# fixme: once logic is set, split above into actual rules to reduce re-doing,
# but I don't think it buys us much

node_modules/mathjax:
	npm install

distribution/$(NATLANG)/extlib/mathjax/.: node_modules/mathjax
	@mkdir -p $@
	@$(CP) -upr node_modules/mathjax/* $@
	@$(CP) -p lib/mathjaxlocal.js $@/config/local
	@rm -fr $@/[CLRptu]*

###############################################################################

the-lessons := $(wildcard \
	lessons/*/langs/$(NATLANG) \
	lessons/*/*/langs/$(NATLANG) \
	lessons/*/*/*/langs/$(NATLANG) \
	)

the-distribution-lessons := $(patsubst %,distribution/$(NATLANG)/lessons/%/., \
                                $(notdir \
                                  $(patsubst %/langs/$(NATLANG),%, \
                                    $(the-lessons))))

lesson-bare-name = $(notdir $(patsubst %/langs/$(NATLANG),%,$1))

copy-lessons: initialization $(the-distribution-lessons)

define make-copy-lesson-rule
distribution/$(NATLANG)/lessons/$(call lesson-bare-name,$1)/.: $1 initialization
	@mkdir -p $$@
	@touch $$@
	@touch $$</ignore_file
	@$(CP) -upr $$</* $$@
	@if test ! -f $$</index.adoc; then \
		touch $$@/index.adoc; fi
	@rm -f $$</ignore_file $$@/ignore_file
	@$(MAKE_DIR)massage-distribution-lesson.sh $$@

endef

$(eval $(foreach lesson,$(the-lessons),$(call make-copy-lesson-rule,$(lesson))))

#########################################################################

the-pathways := $(wildcard pathways/*)

the-courses := $(patsubst \
	%,distribution/$(NATLANG)/courses/%/.,$(notdir $(the-pathways)))

# the-courses := $(foreach \
# 	pathway,$(the-pathways),distribution/$(NATLANG)/courses/$(notdir $(pathway))/.)

copy-pathways: initialization $(the-courses)

define make-copy-pathway-rule
distribution/$(NATLANG)/courses/$(notdir $1)/.: $1 initialization
	@mkdir -p $$@
	@touch $$@
	@touch $$</langs/$(NATLANG)/ignore_file
	@$(CP) -upr $$</langs/$(NATLANG)/* $$@
	@if test ! -f $$</langs/$(NATLANG)/index.adoc; then \
		touch $$@/index.adoc; fi
	@rm -f $$</langs/$(NATLANG)/ignore_file $$@/ignore_file
	@$(MAKE_DIR)massage-course.sh $$@

endef

$(eval $(foreach pathway,$(the-pathways),$(call make-copy-pathway-rule,$(pathway))))

###############################################################################

page-not-found: distribution/$(NATLANG)/lib/page-not-found.pdf

distribution/$(NATLANG)/lib/page-not-found.pdf: initialization
	@echo = PAGE NOT FOUND! > distribution/$(NATLANG)/lib/page-not-found.adoc
	@echo >> distribution/$(NATLANG)/lib/page-not-found.adoc
	@if test -z "$(ASCIIDOCTOR_NODE)"; then echo distribution/$(NATLANG)/lib/page-not-found.adoc >> $(ADOC_INPUT); else echo \"distribution/$(NATLANG)/lib/page-not-found.adoc\", >> $(ADOC_INPUT); fi
	@if test -n "$(BOOK)"; then echo ", { \"input\": \"distribution/$(NATLANG)/lib/page-not-found.html\" }" >> $(PUPPETEER_INPUT); fi

###############################################################################

glossary: distribution/$(NATLANG)/lib/bilingual-glossary.pdf

distribution/$(NATLANG)/lib/bilingual-glossary.pdf: initialization
	@$(MAKE_DIR)make-bilingual-glossary.sh

###############################################################################

courses-and-lessons: copy-lessons copy-pathways
	@echo '}' >> $(EXERCISE_COLLECTOR_INPUT)
	@echo '}' >> $(COURSES_LIST_FILE)
	@$(MAKE_DIR)collect-lessons.lua
	@$(MAKE_DIR)collect-exercises.lua
