# last modified 2023-03-16

include $(MAKE_DIR)utils.mk

phase1: initialization courses-and-lessons page-not-found glossary bootstraplessonjs

###############################################################################

initialization: distribution/$(NATLANG)/extlib/mathjax
	@mkdir -p $(PROGDIR)
	@$(MAKE_DIR)dir-hoist-timestamp.sh pathways lessons
	@$(CP) -upr shared/langs/en-us/* $(PROGDIR)
	@$(CP) -upr shared/langs/en-us/*.css distribution/$(NATLANG)/lib
	@if test $(NATLANG) != en-us -a -d shared/langs/$(NATLANG); then \
		$(CP) -upr shared/langs/$(NATLANG)/* $(PROGDIR); fi
	@mkdir -p distribution/$(NATLANG)/lib/Badges
	@mkdir -p distribution/$(NATLANG)/lib/images
	@$(CP) -upr $(PROGDIR)/Badges/* distribution/$(NATLANG)/lib/Badges
	@$(CP) -upr $(PROGDIR)/images/* distribution/$(NATLANG)/lib/images
	@$(CP) -upr shared/langs/en-us/docroot/* distribution/$(NATLANG)
	@if test $(NATLANG) != en-us -a -d shared/langs/$(NATLANG)/docroot; then \
		$(CP) -upr shared/langs/$(NATLANG)/docroot/* distribution/$(NATLANG); fi
	@$(CP) -p lib/*.html $(PROGDIR)
	@$(CP) -p lib/*.rkt $(PROGDIR)
	@$(CP) -p lib/*.css distribution/$(NATLANG)/lib
	@$(CP) -p lib/[!b]*.js distribution/$(NATLANG)/lib
	@$(CP) -p lib/*.png distribution/$(NATLANG)/lib
	@$(CP) -p shared/langs/en-us/*.css distribution/$(NATLANG)/lib
	@rm -f $(ADOC_INPUT) $(PUPPETEER_INPUT)
	@if test -n "$(BOOK)"; then echo "{\"htmlFileSpecs\": [ \"ignoreElement\"" > $(PUPPETEER_INPUT); fi
	@echo 'return {' > $(ADOC_POSTPROC_LESSONPLAN_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_NARRATIVEAUX_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_NARRATIVE_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_RESOURCES_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_PWYINDEP_INPUT)
	@echo 'return {' > $(ADOC_POSTPROC_WORKBOOKPAGE_INPUT)
	@echo '(' > $(ADOCABLES_INPUT)

# fixme: once logic is set, split above into actual rules to reduce re-doing,
# but I don't think it buys us much

node_modules/mathjax:
	npm install

distribution/$(NATLANG)/extlib/mathjax: node_modules/mathjax
	@mkdir -p $@
	@$(CP) -upr node_modules/mathjax/* $@
	@$(CP) -p lib/mathjaxlocal.js $@/config/local
	@rm -fr $@/[CLRptu]*

###############################################################################

the-lessons := $(wildcard \
	lessons/*/langs/$(NATLANG) \
	lessons/*/*/langs/$(NATLANG) \
	lessons/*/*/*/langs/$(NATLANG) \
	)

the-distribution-lessons := $(patsubst %,distribution/$(NATLANG)/lessons/%, \
                                $(notdir \
                                  $(patsubst %/langs/$(NATLANG),%, \
                                    $(the-lessons))))

curr-bare-name = $(notdir $(patsubst %/langs/$(NATLANG),%,$1))

copy-lessons: $(the-distribution-lessons)
	@echo distribution/$(NATLANG)/lessons updated

define make-copy-lesson-rule
distribution/$(NATLANG)/lessons/$(call curr-bare-name,$1): $1
	@$(MAKE_DIR)massage-distribution-lesson.sh $$< $$@

endef

$(eval $(foreach lesson,$(the-lessons),$(call make-copy-lesson-rule,$(lesson))))

#########################################################################

the-pathways := $(wildcard pathways/*/langs/$(NATLANG))

the-courses := $(patsubst %,distribution/$(NATLANG)/courses/%, \
                  $(notdir \
                     $(patsubst %/langs/$(NATLANG),%, \
                        $(the-pathways))))

copy-pathways: $(the-courses)
	@echo distribution/$(NATLANG)/courses updated

define make-copy-pathway-rule
distribution/$(NATLANG)/courses/$(call curr-bare-name,$1): $1
	@$(MAKE_DIR)massage-course.sh $$< $$@

endef

$(eval $(foreach pathway,$(the-pathways),$(call make-copy-pathway-rule,$(pathway))))

###############################################################################

page-not-found: distribution/$(NATLANG)/lib/page-not-found.adoc

distribution/$(NATLANG)/lib/page-not-found.adoc:
	@echo = PAGE NOT FOUND! > distribution/$(NATLANG)/lib/page-not-found.adoc
	@echo >> distribution/$(NATLANG)/lib/page-not-found.adoc

###############################################################################

glossary: distribution/$(NATLANG)/lib/bilingual-glossary.adoc

distribution/$(NATLANG)/lib/bilingual-glossary.adoc: lib/glossary-terms.json
	$(MAKE_DIR)make-bilingual-glossary.lua $< $@

###############################################################################

bootstraplessonjs: distribution/$(NATLANG)/lib/bootstraplesson.js

distribution/$(NATLANG)/lib/bootstraplesson.js: lib/bootstraplesson.js
	@cat $< | $(SED) -e 's/^const proglangs.*/const proglangs = "$(ALL_PROGLANGS)".split(new RegExp(" \\+"));/' > $@

###############################################################################

courses-and-lessons: copy-lessons copy-pathways
	$(MAKE_DIR)collect-distribution-info.lua

