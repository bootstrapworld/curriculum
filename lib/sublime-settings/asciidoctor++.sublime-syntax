%YAML 1.2
---
name: Asciidoctor+
file_extensions:
  - adoc
scope: text.asciidoc.asciidoctor++
contexts:
  main:
    # mathjax gets its own context
    - match: '@math\{'
      scope: directive.muted
      push: mathjax

    # match "muted" directives WITH arguments
    #- match: '@([^\{\s]+)(\{[^\}]*\}){0,1}\{'
    - match: '@\b(center|left|right|fitb|fitbruby|vspace|hspace|show|showsoln|ifsoln|ifnotsoln)\b(\{[^\}]+\})\{'
      scope: directive.muted
      captures:
        1: keyword
        2: arguments
      push: directive_muted

    # match "muted" directives WITHOUT arguments
    - match: '@\b(center|left|right|fitb|fitbruby|vspace|hspace|show|showsoln|ifsoln|ifnotsoln)\b\{'
      scope: directive.muted
      captures:
        1: keyword
      push: directive_muted

    # match other directives WITH arguments
    - match: '@([^\{\s]+)(\{[^\}]*\})\{'
    #- match: '@\b(lesson\-instruction|QandA|strategy|ifproglang|link\-instructions|description|preparation)\b(\{[^\}]+\}){0,1}\{'
      captures:
        1: keyword
        2: arguments
      scope: directive
      push: directive

    # match other directives WITHOUT arguments
    - match: '@([^\{\s]+)\{{0,1}'
    #- match: '@\b(lesson\-instruction|QandA|strategy|ifproglang|link\-instructions|description|preparation)\b(\{[^\}]+\}){0,1}\{'
      captures:
        1: keyword
      scope: directive
      push: directive

    # match certain special literals as muted
    - match: '{nbsp}'
      scope: directive.muted

    # mute table formatting statements
    - match: '\[(\.\S+,\s*)?cols[^\]]+\]'
      scope: directive.muted

    # don't let '~' screw up the whole damned document
    - match: '~'
      scope: main

    # for anything else, use the normal text parsing rules
    - include: scope:text.asciidoc

  # in the "directive" context, keep an eye out for close (})
  # otherwise, treat any other matches as we would in the
  # main context
  directive:
    - match: '}'
      scope: directive
      pop: true

    - include: main

  # in the "directive_muted" context, keep an eye out for close (})
  # otherwise, treat any other matches as we would in the
  # main context
  directive_muted:
    - match: '}'
      scope: directive.muted
      pop: true

    - include: main

  # in the "mathjax" context, keep an eye out for close (}),
  # or open ({}). otherwise, treat any other matches as we would in the
  # main context
  mathjax:
    - match: '}'
      scope: directive.muted
      pop: true

    # count nested grouping symbols
    - match: '{'
      scope: directive.mathjax
      push: mathjax

    # muted mboxes
    - match: '\\mbox\{'
      scope: directive.muted

    - match: '[^\}\{\\]+'
      scope: directive.mathjax
