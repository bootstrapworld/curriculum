{"version":3,"file":"mobxreactlite.esm.development.js","sources":["../src/utils/assertEnvironment.ts","../src/utils/observerBatching.ts","../src/utils/utils.ts","../src/utils/printDebugValue.ts","../src/staticRendering.ts","../src/utils/UniversalFinalizationRegistry.ts","../src/utils/observerFinalizationRegistry.ts","../src/useObserver.ts","../src/observer.ts","../src/ObserverComponent.ts","../src/useLocalObservable.ts","../src/useAsObservableSource.ts","../src/useLocalStore.ts","../src/index.ts"],"sourcesContent":["import { makeObservable } from \"mobx\"\nimport { useState } from \"react\"\n\nif (!useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\")\n}\nif (!makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\")\n}\n","import { configure } from \"mobx\"\n\nexport function defaultNoopBatch(callback: () => void) {\n    callback()\n}\n\nexport function observerBatching(reactionScheduler: any) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch\n        if (\"production\" !== process.env.NODE_ENV) {\n            console.warn(\n                \"[MobX] Failed to get unstable_batched updates from react-dom / react-native\"\n            )\n        }\n    }\n    configure({ reactionScheduler })\n}\n\nexport const isObserverBatched = () => {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\"[MobX] Deprecated\")\n    }\n\n    return true\n}\n","const deprecatedMessages: string[] = []\n\nexport function useDeprecated(msg: string) {\n    if (!deprecatedMessages.includes(msg)) {\n        deprecatedMessages.push(msg)\n        console.warn(msg)\n    }\n}\n","import { getDependencyTree, Reaction } from \"mobx\"\n\nexport function printDebugValue(v: Reaction) {\n    return getDependencyTree(v)\n}\n","let globalIsUsingStaticRendering = false\n\nexport function enableStaticRendering(enable: boolean) {\n    globalIsUsingStaticRendering = enable\n}\n\nexport function isUsingStaticRendering(): boolean {\n    return globalIsUsingStaticRendering\n}\n","export declare class FinalizationRegistryType<T> {\n    constructor(finalize: (value: T) => void)\n    register(target: object, value: T, token?: object): void\n    unregister(token: object): void\n}\n\ndeclare const FinalizationRegistry: typeof FinalizationRegistryType | undefined\n\nexport const REGISTRY_FINALIZE_AFTER = 10_000\nexport const REGISTRY_SWEEP_INTERVAL = 10_000\n\nexport class TimerBasedFinalizationRegistry<T> implements FinalizationRegistryType<T> {\n    private registrations: Map<unknown, { value: T; registeredAt: number }> = new Map()\n    private sweepTimeout: ReturnType<typeof setTimeout> | undefined\n\n    constructor(private readonly finalize: (value: T) => void) {}\n\n    // Token is actually required with this impl\n    register(target: object, value: T, token?: object) {\n        this.registrations.set(token, {\n            value,\n            registeredAt: Date.now()\n        })\n        this.scheduleSweep()\n    }\n\n    unregister(token: unknown) {\n        this.registrations.delete(token)\n    }\n\n    // Bound so it can be used directly as setTimeout callback.\n    sweep = (maxAge = REGISTRY_FINALIZE_AFTER) => {\n        // cancel timeout so we can force sweep anytime\n        clearTimeout(this.sweepTimeout)\n        this.sweepTimeout = undefined\n\n        const now = Date.now()\n        this.registrations.forEach((registration, token) => {\n            if (now - registration.registeredAt >= maxAge) {\n                this.finalize(registration.value)\n                this.registrations.delete(token)\n            }\n        })\n\n        if (this.registrations.size > 0) {\n            this.scheduleSweep()\n        }\n    }\n\n    // Bound so it can be exported directly as clearTimers test utility.\n    finalizeAllImmediately = () => {\n        this.sweep(0)\n    }\n\n    private scheduleSweep() {\n        if (this.sweepTimeout === undefined) {\n            this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL)\n        }\n    }\n}\n\nexport const UniversalFinalizationRegistry =\n    typeof FinalizationRegistry !== \"undefined\"\n        ? FinalizationRegistry\n        : TimerBasedFinalizationRegistry\n","import { Reaction } from \"mobx\"\nimport { UniversalFinalizationRegistry } from \"./UniversalFinalizationRegistry\"\n\nexport const observerFinalizationRegistry = new UniversalFinalizationRegistry(\n    (adm: { reaction: Reaction | null }) => {\n        adm.reaction?.dispose()\n        adm.reaction = null\n    }\n)\n","import { Reaction } from \"mobx\"\nimport React from \"react\"\nimport { printDebugValue } from \"./utils/printDebugValue\"\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\nimport { useSyncExternalStore } from \"use-sync-external-store/shim\"\n\n// Do not store `admRef` (even as part of a closure!) on this object,\n// otherwise it will prevent GC and therefore reaction disposal via FinalizationRegistry.\ntype ObserverAdministration = {\n    reaction: Reaction | null // also serves as disposed flag\n    onStoreChange: Function | null // also serves as mounted flag\n    // stateVersion that 'ticks' for every time the reaction fires\n    // tearing is still present,\n    // because there is no cross component synchronization,\n    // but we can use `useSyncExternalStore` API.\n    // TODO: optimize to use number?\n    stateVersion: any\n    name: string\n    // These don't depend on state/props, therefore we can keep them here instead of `useCallback`\n    subscribe: Parameters<typeof React.useSyncExternalStore>[0]\n    getSnapshot: Parameters<typeof React.useSyncExternalStore>[1]\n}\n\nfunction createReaction(adm: ObserverAdministration) {\n    adm.reaction = new Reaction(`observer${adm.name}`, () => {\n        adm.stateVersion = Symbol()\n        // onStoreChange won't be available until the component \"mounts\".\n        // If state changes in between initial render and mount,\n        // `useSyncExternalStore` should handle that by checking the state version and issuing update.\n        adm.onStoreChange?.()\n    })\n}\n\nexport function useObserver<T>(render: () => T, baseComponentName: string = \"observed\"): T {\n    if (isUsingStaticRendering()) {\n        return render()\n    }\n\n    const admRef = React.useRef<ObserverAdministration | null>(null)\n\n    if (!admRef.current) {\n        // First render\n        const adm: ObserverAdministration = {\n            reaction: null,\n            onStoreChange: null,\n            stateVersion: Symbol(),\n            name: baseComponentName,\n            subscribe(onStoreChange: () => void) {\n                // Do NOT access admRef here!\n                observerFinalizationRegistry.unregister(adm)\n                adm.onStoreChange = onStoreChange\n                if (!adm.reaction) {\n                    // We've lost our reaction and therefore all subscriptions, occurs when:\n                    // 1. Timer based finalization registry disposed reaction before component mounted.\n                    // 2. React \"re-mounts\" same component without calling render in between (typically <StrictMode>).\n                    // We have to recreate reaction and schedule re-render to recreate subscriptions,\n                    // even if state did not change.\n                    createReaction(adm)\n                    // `onStoreChange` won't force update if subsequent `getSnapshot` returns same value.\n                    // So we make sure that is not the case\n                    adm.stateVersion = Symbol()\n                }\n\n                return () => {\n                    // Do NOT access admRef here!\n                    adm.onStoreChange = null\n                    adm.reaction?.dispose()\n                    adm.reaction = null\n                }\n            },\n            getSnapshot() {\n                // Do NOT access admRef here!\n                return adm.stateVersion\n            }\n        }\n\n        admRef.current = adm\n    }\n\n    const adm = admRef.current!\n\n    if (!adm.reaction) {\n        // First render or reaction was disposed by registry before subscribe\n        createReaction(adm)\n        // StrictMode/ConcurrentMode/Suspense may mean that our component is\n        // rendered and abandoned multiple times, so we need to track leaked\n        // Reactions.\n        observerFinalizationRegistry.register(admRef, adm, adm)\n    }\n\n    React.useDebugValue(adm.reaction!, printDebugValue)\n\n    useSyncExternalStore(\n        // Both of these must be stable, otherwise it would keep resubscribing every render.\n        adm.subscribe,\n        adm.getSnapshot,\n        adm.getSnapshot\n    )\n\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    let renderResult!: T\n    let exception\n    adm.reaction!.track(() => {\n        try {\n            renderResult = render()\n        } catch (e) {\n            exception = e\n        }\n    })\n\n    if (exception) {\n        throw exception // re-throw any exceptions caught during rendering\n    }\n\n    return renderResult\n}\n","import { forwardRef, memo } from \"react\"\n\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { useObserver } from \"./useObserver\"\n\nlet warnObserverOptionsDeprecated = true\n\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\nconst isFunctionNameConfigurable =\n    Object.getOwnPropertyDescriptor(() => {}, \"name\")?.configurable ?? false\n\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof forwardRef === \"function\" && forwardRef((props: any) => null)[\"$$typeof\"]\n\nconst ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof memo === \"function\" && memo((props: any) => null)[\"$$typeof\"]\n\nexport interface IObserverOptions {\n    readonly forwardRef?: boolean\n}\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefRenderFunction<TRef, P>,\n    options: IObserverOptions & { forwardRef: true }\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefExoticComponent<\n        React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n    >\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object>(\n    baseComponent: React.FunctionComponent<P>,\n    options?: IObserverOptions\n): React.FunctionComponent<P>\n\nexport function observer<\n    C extends React.FunctionComponent<any> | React.ForwardRefRenderFunction<any>,\n    Options extends IObserverOptions\n>(\n    baseComponent: C,\n    options?: Options\n): Options extends { forwardRef: true }\n    ? C extends React.ForwardRefRenderFunction<infer TRef, infer P>\n        ? C &\n              React.MemoExoticComponent<\n                  React.ForwardRefExoticComponent<\n                      React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n                  >\n              >\n        : never /* forwardRef set for a non forwarding component */\n    : C & { displayName: string }\n\n// n.b. base case is not used for actual typings or exported in the typing files\nexport function observer<P extends object, TRef = {}>(\n    baseComponent:\n        | React.ForwardRefRenderFunction<TRef, P>\n        | React.FunctionComponent<P>\n        | React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>,\n    // TODO remove in next major\n    options?: IObserverOptions\n) {\n    if (process.env.NODE_ENV !== \"production\" && warnObserverOptionsDeprecated && options) {\n        warnObserverOptionsDeprecated = false\n        console.warn(\n            `[mobx-react-lite] \\`observer(fn, { forwardRef: true })\\` is deprecated, use \\`observer(React.forwardRef(fn))\\``\n        )\n    }\n\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\n            `[mobx-react-lite] You are trying to use \\`observer\\` on a function component wrapped in either another \\`observer\\` or \\`React.memo\\`. The observer already applies 'React.memo' for you.`\n        )\n    }\n\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent\n    }\n\n    let useForwardRef = options?.forwardRef ?? false\n    let render = baseComponent\n\n    const baseComponentName = baseComponent.displayName || baseComponent.name\n\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true\n        render = baseComponent[\"render\"]\n        if (typeof render !== \"function\") {\n            throw new Error(\n                `[mobx-react-lite] \\`render\\` property of ForwardRef was not a function`\n            )\n        }\n    }\n\n    let observerComponent = (props: any, ref: React.Ref<TRef>) => {\n        return useObserver(() => render(props, ref), baseComponentName)\n    }\n\n    // Inherit original name and displayName, see #3438\n    ;(observerComponent as React.FunctionComponent).displayName = baseComponent.displayName\n\n    if (isFunctionNameConfigurable) {\n        Object.defineProperty(observerComponent, \"name\", {\n            value: baseComponent.name,\n            writable: true,\n            configurable: true\n        })\n    }\n\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if ((baseComponent as any).contextTypes) {\n        ;(observerComponent as React.FunctionComponent).contextTypes = (\n            baseComponent as any\n        ).contextTypes\n    }\n\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = forwardRef(observerComponent)\n    }\n\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = memo(observerComponent)\n\n    copyStaticProperties(baseComponent, observerComponent)\n\n    if (\"production\" !== process.env.NODE_ENV) {\n        Object.defineProperty(observerComponent, \"contextTypes\", {\n            set() {\n                throw new Error(\n                    `[mobx-react-lite] \\`${\n                        this.displayName || this.type?.displayName || this.type?.name || \"Component\"\n                    }.contextTypes\\` must be set before applying \\`observer\\`.`\n                )\n            }\n        })\n    }\n\n    return observerComponent\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList: any = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n}\n\nfunction copyStaticProperties(base: any, target: any) {\n    Object.keys(base).forEach(key => {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n","import { useObserver } from \"./useObserver\"\n\ninterface IObserverProps {\n    children?(): React.ReactElement | null\n    render?(): React.ReactElement | null\n}\n\nfunction ObserverComponent({ children, render }: IObserverProps) {\n    const component = children || render\n    if (typeof component !== \"function\") {\n        return null\n    }\n    return useObserver(component)\n}\nif (\"production\" !== process.env.NODE_ENV) {\n    ObserverComponent.propTypes = {\n        children: ObserverPropsCheck,\n        render: ObserverPropsCheck\n    }\n}\nObserverComponent.displayName = \"Observer\"\n\nexport { ObserverComponent as Observer }\n\nfunction ObserverPropsCheck(\n    props: { [k: string]: any },\n    key: string,\n    componentName: string,\n    location: any,\n    propFullName: string\n) {\n    const extraKey = key === \"children\" ? \"render\" : \"children\"\n    const hasProp = typeof props[key] === \"function\"\n    const hasExtraProp = typeof props[extraKey] === \"function\"\n    if (hasProp && hasExtraProp) {\n        return new Error(\n            \"MobX Observer: Do not use children and render in the same time in`\" + componentName\n        )\n    }\n\n    if (hasProp || hasExtraProp) {\n        return null\n    }\n    return new Error(\n        \"Invalid prop `\" +\n            propFullName +\n            \"` of type `\" +\n            typeof props[key] +\n            \"` supplied to\" +\n            \" `\" +\n            componentName +\n            \"`, expected `function`.\"\n    )\n}\n","import { observable, AnnotationsMap } from \"mobx\"\nimport { useState } from \"react\"\n\nexport function useLocalObservable<TStore extends Record<string, any>>(\n    initializer: () => TStore,\n    annotations?: AnnotationsMap<TStore, never>\n): TStore {\n    return useState(() => observable(initializer(), annotations, { autoBind: true }))[0]\n}\n","import { useDeprecated } from \"./utils/utils\"\nimport { observable, runInAction } from \"mobx\"\nimport { useState } from \"react\"\n\nexport function useAsObservableSource<TSource extends object>(current: TSource): TSource {\n    if (\"production\" !== process.env.NODE_ENV)\n        useDeprecated(\n            \"[mobx-react-lite] 'useAsObservableSource' is deprecated, please store the values directly in an observable, for example by using 'useLocalObservable', and sync future updates using 'useEffect' when needed. See the README for examples.\"\n        )\n    // We're deliberately not using idiomatic destructuring for the hook here.\n    // Accessing the state value as an array element prevents TypeScript from generating unnecessary helpers in the resulting code.\n    // For further details, please refer to mobxjs/mobx#3842.\n    const res = useState(() => observable(current, {}, { deep: false }))[0]\n    runInAction(() => {\n        Object.assign(res, current)\n    })\n    return res\n}\n","import { observable } from \"mobx\"\nimport { useState } from \"react\"\n\nimport { useDeprecated } from \"./utils/utils\"\nimport { useAsObservableSource } from \"./useAsObservableSource\"\n\nexport function useLocalStore<TStore extends Record<string, any>>(initializer: () => TStore): TStore\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\n    initializer: (source: TSource) => TStore,\n    current: TSource\n): TStore\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\n    initializer: (source?: TSource) => TStore,\n    current?: TSource\n): TStore {\n    if (\"production\" !== process.env.NODE_ENV) {\n        useDeprecated(\n            \"[mobx-react-lite] 'useLocalStore' is deprecated, use 'useLocalObservable' instead.\"\n        )\n    }\n    const source = current && useAsObservableSource(current)\n    return useState(() => observable(initializer(source), undefined, { autoBind: true }))[0]\n}\n","import \"./utils/assertEnvironment\"\n\nimport { unstable_batchedUpdates as batch } from \"./utils/reactBatchedUpdates\"\nimport { observerBatching } from \"./utils/observerBatching\"\nimport { useDeprecated } from \"./utils/utils\"\nimport { useObserver as useObserverOriginal } from \"./useObserver\"\nimport { enableStaticRendering } from \"./staticRendering\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\n\nobserverBatching(batch)\n\nexport { isUsingStaticRendering, enableStaticRendering } from \"./staticRendering\"\nexport { observer, IObserverOptions } from \"./observer\"\nexport { Observer } from \"./ObserverComponent\"\nexport { useLocalObservable } from \"./useLocalObservable\"\nexport { useLocalStore } from \"./useLocalStore\"\nexport { useAsObservableSource } from \"./useAsObservableSource\"\n\nexport { observerFinalizationRegistry as _observerFinalizationRegistry }\nexport const clearTimers = observerFinalizationRegistry[\"finalizeAllImmediately\"] ?? (() => {})\n\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\n    if (\"production\" !== process.env.NODE_ENV) {\n        useDeprecated(\n            \"[mobx-react-lite] 'useObserver(fn)' is deprecated. Use `<Observer>{fn}</Observer>` instead, or wrap the entire component in `observer`.\"\n        )\n    }\n    return useObserverOriginal(fn, baseComponentName)\n}\n\nexport { isObserverBatched, observerBatching } from \"./utils/observerBatching\"\n\nexport function useStaticRendering(enable: boolean) {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\n            \"[mobx-react-lite] 'useStaticRendering' is deprecated, use 'enableStaticRendering' instead\"\n        )\n    }\n    enableStaticRendering(enable)\n}\n"],"names":["useState","Error","makeObservable","defaultNoopBatch","callback","observerBatching","reactionScheduler","console","warn","configure","isObserverBatched","deprecatedMessages","useDeprecated","msg","includes","push","printDebugValue","v","getDependencyTree","globalIsUsingStaticRendering","enableStaticRendering","enable","isUsingStaticRendering","REGISTRY_FINALIZE_AFTER","REGISTRY_SWEEP_INTERVAL","TimerBasedFinalizationRegistry","finalize","registrations","Map","sweepTimeout","sweep","maxAge","clearTimeout","_this","undefined","now","Date","forEach","registration","token","registeredAt","value","size","scheduleSweep","finalizeAllImmediately","_proto","prototype","register","target","set","unregister","setTimeout","UniversalFinalizationRegistry","FinalizationRegistry","observerFinalizationRegistry","adm","_adm$reaction","reaction","dispose","createReaction","Reaction","name","stateVersion","Symbol","onStoreChange","useObserver","render","baseComponentName","admRef","React","useRef","current","subscribe","getSnapshot","useDebugValue","useSyncExternalStore","renderResult","exception","track","e","warnObserverOptionsDeprecated","hasSymbol","isFunctionNameConfigurable","_Object$getOwnPropert","_Object$getOwnPropert2","Object","getOwnPropertyDescriptor","configurable","ReactForwardRefSymbol","forwardRef","props","ReactMemoSymbol","memo","observer","baseComponent","options","process","useForwardRef","_options$forwardRef","displayName","observerComponent","ref","defineProperty","writable","contextTypes","copyStaticProperties","_this$type","type","_this$type2","hoistBlackList","$$typeof","compare","base","keys","key","ObserverComponent","_ref","children","component","propTypes","ObserverPropsCheck","componentName","location","propFullName","extraKey","hasProp","hasExtraProp","useLocalObservable","initializer","annotations","observable","autoBind","useAsObservableSource","res","deep","runInAction","assign","useLocalStore","source","batch","clearTimers","_observerFinalization","fn","useObserverOriginal","useStaticRendering"],"mappings":"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"}