{"version":3,"file":"react-showdown.esm.js","sources":["../src/MarkdownView.tsx","../src/index.tsx"],"sourcesContent":["import React, {\n  createElement,\n  useMemo,\n  ClassType,\n  FunctionComponent,\n  ReactNode,\n  ReactElement,\n  HTMLAttributes,\n} from 'react';\nimport {\n  Converter,\n  ConverterOptions,\n  Flavor,\n  ShowdownExtension,\n} from 'showdown';\nimport * as htmlparser from 'htmlparser2';\nimport { Node, Element, DataNode } from 'domhandler';\n\nexport interface MarkdownViewProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'dangerouslySetInnerHTML'> {\n  dangerouslySetInnerHTML?: boolean;\n  flavor?: Flavor;\n  markdown: string;\n  sanitizeHtml?: (html: string) => string;\n  markup?: string;\n  options?: ConverterOptions;\n  extensions?: ShowdownExtension[];\n  components?: Record<\n    string,\n    ClassType<never, never, never> | FunctionComponent<any>\n  >;\n}\n\nexport default function MarkdownView(props: MarkdownViewProps): ReactElement {\n  const {\n    dangerouslySetInnerHTML,\n    flavor,\n    markdown,\n    markup,\n    options,\n    extensions,\n    components,\n    sanitizeHtml,\n    ...otherProps\n  } = props;\n\n  const mapElement = useMemo(\n    () =>\n      function mapElement(node: Node, index: number): ReactNode {\n        if (node.type === 'tag' && node instanceof Element) {\n          const elementType = components?.[node.name] || node.name;\n          const props: Record<string, any> = { key: index, ...node.attribs };\n\n          // Rename class to className to hide react warning\n          if (props.class && !props.className) {\n            props.className = props.class;\n            delete props.class;\n          }\n\n          // Map style strings to style objects\n          if (typeof props.style === 'string') {\n            const styles: Record<string, any> = {};\n            props.style.split(';').forEach(style => {\n              if (style.indexOf(':') !== -1) {\n                let [key, value] = style.split(':');\n                key = key\n                  .trim()\n                  .replace(/-([a-z])/g, match => match[1].toUpperCase());\n                value = value.trim();\n                styles[key] = value;\n              }\n            });\n            props.style = styles;\n          }\n\n          const children = skipAnyChildrenFor.includes(node.name)\n            ? null\n            : skipWhitespaceElementsFor.includes(node.name)\n            ? node.children.filter(filterWhitespaceElements).map(mapElement)\n            : node.children.map(mapElement);\n          return createElement(elementType, props, children);\n        } else if (node.type === 'text' && node instanceof DataNode) {\n          return node.data;\n        } else if (node.type === 'comment') {\n          return null; // noop\n        } else if (node.type === 'style' && node instanceof Element) {\n          const props: Record<string, any> = { key: index, ...node.attribs };\n          const children = node.children.map(mapElement);\n          return createElement('style', props, children);\n        } else {\n          console.warn(\n            `Warning: Could not map element with type \"${node.type}\".`,\n            node\n          );\n          return null;\n        }\n      },\n    [components]\n  );\n\n  if (dangerouslySetInnerHTML && components) {\n    console.warn(\n      'MarkdownView could not render custom components when dangerouslySetInnerHTML is enabled.'\n    );\n  }\n\n  const converter = new Converter();\n  if (flavor) {\n    converter.setFlavor(flavor);\n  }\n  if (options) {\n    for (const key in options) {\n      if (key === 'extensions' && options.extensions) {\n        for (const extension of options.extensions) {\n          if (typeof extension === 'string') {\n            converter.useExtension(extension);\n          } else {\n            converter.addExtension(extension);\n          }\n        }\n      }\n      converter.setOption(key, options[key]);\n    }\n  }\n  if (extensions) {\n    converter.addExtension(extensions);\n  }\n\n  let html = converter.makeHtml(markdown ?? markup);\n  if (sanitizeHtml) {\n    html = sanitizeHtml(html);\n  }\n\n  if (dangerouslySetInnerHTML) {\n    return <div dangerouslySetInnerHTML={{ __html: html }} />;\n  }\n\n  const root = htmlparser.parseDOM(html, {\n    // Don't change the case of parsed html tags to match inline components.\n    lowerCaseTags: false,\n    // Don't change the attribute names so that stuff like `className` works correctly.\n    lowerCaseAttributeNames: false,\n    // Encode entities automatically, so that &copy; and &uuml; works correctly.\n    decodeEntities: true,\n    // Fix issue with content after a self closing tag.\n    recognizeSelfClosing: true,\n  });\n\n  return createElement('div', otherProps, root.map(mapElement));\n}\n\n// Match react-dom omittedCloseTags. See also:\n// https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/omittedCloseTags.js\nconst skipAnyChildrenFor = [\n  'area',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'param',\n  'source',\n  'track',\n  'wbr',\n];\n\nconst skipWhitespaceElementsFor = ['table', 'thead', 'tbody', 'tr'];\n\nfunction filterWhitespaceElements(node: Node) {\n  if (node.type === 'text' && node instanceof DataNode) {\n    return node.data.trim().length > 0;\n  } else {\n    return true;\n  }\n}\n","import {\n  // Flavors\n  setFlavor,\n  getFlavor,\n\n  // Options\n  setOption,\n  getOption,\n  getOptions,\n  resetOptions,\n\n  // Extensions\n  extension,\n  getAllExtensions,\n  removeExtension,\n  resetExtensions,\n  ShowdownExtension,\n} from 'showdown';\n\nimport MarkdownView from './MarkdownView';\n\nexport default MarkdownView;\nexport const Markdown = MarkdownView;\n\nexport { MarkdownViewProps } from './MarkdownView';\n\nexport { Flavor, ShowdownExtension } from 'showdown';\n\nconst setExtension: (\n  name: string,\n  ext:\n    | (() => ShowdownExtension[] | ShowdownExtension)\n    | ShowdownExtension[]\n    | ShowdownExtension\n) => void = extension;\nconst getExtension: (name: string) => ShowdownExtension[] = extension;\n\nexport const GlobalConfiguration = {\n  // Flavors,\n  setFlavor,\n  getFlavor,\n\n  // Options\n  setOption,\n  getOption,\n  getOptions,\n  resetOptions,\n\n  // Extensions\n  setExtension,\n  getExtension,\n  getAllExtensions,\n  removeExtension,\n  resetExtensions,\n};\n"],"names":["MarkdownView","props","dangerouslySetInnerHTML","flavor","markdown","markup","options","extensions","components","sanitizeHtml","otherProps","mapElement","useMemo","node","index","type","Element","elementType","name","key","attribs","className","style","styles","split","forEach","indexOf","value","trim","replace","match","toUpperCase","children","skipAnyChildrenFor","includes","skipWhitespaceElementsFor","filter","filterWhitespaceElements","map","createElement","DataNode","data","console","warn","converter","Converter","setFlavor","extension","useExtension","addExtension","setOption","html","makeHtml","React","__html","root","htmlparser","lowerCaseTags","lowerCaseAttributeNames","decodeEntities","recognizeSelfClosing","length","Markdown","setExtension","getExtension","GlobalConfiguration","getFlavor","getOption","getOptions","resetOptions","getAllExtensions","removeExtension","resetExtensions"],"mappings":"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"}