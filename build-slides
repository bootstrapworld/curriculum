#!/bin/bash

eval $(grep '^SEMESTER=' ./deploy-to-brown)
eval $(grep '^YEAR=' ./deploy-to-brown)
if test -n "$SEMESTER" -a -n "$YEAR"; then
  semesterYear=$SEMESTER$YEAR
else
  semesterYear=latest
fi
bootstraproot=https://bootstrapworld.org/materials/$semesterYear

regenid=

if test $# -ne 0 -a "$1" = -f; then
  regenid=1
fi

export topdir=$(pwd)

templateSlidesId=1vFGtTzhTlc1p8VJECRucj5DO83skm4wMI1BU3QbHE5k

SED=sed

if which gsed|grep -q .; then
  SED=gsed
fi

export PROGLANG=pyret

if test ! -d distribution; then
  echo WARNING: Did not find any built pathways
  exit
else
  cd distribution
fi

for natlang in *; do
 test -d $natlang || continue
 cd $natlang
 export PROGDIR=$topdir/distribution/.prog-$natlang
 export BOOTSTRAPPREFIX="$bootstraproot/$natlang"
 if test -d lessons; then
   cd lessons
   for lsn in *; do
     test -d $lsn || continue
     export LESSON="$lsn"
     cd $LESSON
     # echo Doing $LESSON
     PROGLANG=pyret
     repoLESSON=$LESSON
     if test -f .cached/.proglang-wescheme; then
       PROGLANG=wescheme
       repoLESSON=$(echo $LESSON|$SED -e 's/-wescheme$//')
     elif test -f .cached/.proglang-codap; then
       PROGLANG=codap
       repoLESSON=$(echo $LESSON|$SED -e 's/-codap$//')
     fi

     # echo PROGLANG is $PROGLANG

     idfile=slides-$PROGLANG.id
     if test $regenid; then
       rm -f $idfile
     fi

     if test -f slides.md; then
       $PROGDIR/slides-preproc.rkt slides.md
       if test -f slides.mkd; then
         title=$(grep '^# ' slides.mkd|$SED -e 1q|$SED -e 's/^#  *//')
         title="AUTO-GEN:$title"
         if test -s "$idfile"; then
           id=$(cat "$idfile"|$SED -e 1q)
           # echo md2gslides with id $id
           node $topdir/node_modules/md2googleslides/bin/md2gslides.js slides.mkd -a "$id" -e -n -t "$title" --use-fileio > .tmp.txt 2>/dev/null
           # node node_modules/md2googleslides/bin/md2gslides.js slides.mkd -a "$id" -e -n -t "$title" --use-fileio > .tmp.txt 2>.tmpe.txt
           if grep -q 'Unable to generate slides' .tmp.txt; then
             echo Slides failed for $LESSON/slides.mkd
             if grep -q 'must be less than the endIndex' .tmp.txt; then
               echo You likely have a slide with text preceding table
             fi
             cat .tmp.txt
           fi
           # rm .tmp.txt
         else
           # echo md2gslides without id
           # md2gslides.js slides.mkd -n -t "$title" --use-fileio > "$idfile" 2> /dev/null
           $topdir/node_modules/md2googleslides/bin/md2gslides.js slides.mkd -n -t "$title" --use-fileio > .tmp.txt
           if grep -q 'Unable to generate slides' .tmp.txt; then
             echo Slides failed for $LESSON/slides.mkd
             if grep -q 'must be less than the endIndex' .tmp.txt; then
               echo You likely have a slide with text preceding table
             fi
             cat .tmp.txt
           else
             grep 'View your presentation at' .tmp.txt | $SED -e 's/.*docs\.google\.com\/presentation\/d\///' > "$idfile"
             cp "$idfile" $topdir/lessons/$repoLESSON/langs/$natlang/
             echo Remember to push lessons/$repoLESSON/langs/$natlang/$idfile to Git repo
           fi
         fi
         if test -f "$idfile"; then
           cat "$idfile"|$SED -e 1q|$SED -e 's/^/<a target="_blank" href="https:\/\/docs.google.com\/presentation\/d\//' > slides-$PROGLANG.html
           timestamp=$(date +%c)
           $SED -i -e 's/$/">Google Slides generated INSERTTIMESTAMP<\/a>/' slides-$PROGLANG.html
           $SED -i -e "s/INSERTTIMESTAMP/$timestamp/" slides-$PROGLANG.html
         fi
       else
         echo WARNING: slides.md failed preprocessing
       fi
     else
       echo WARNING: Lesson \'$LESSON\' doesn\'t have slides.md
     fi
     cd ..
   done
   cd ..
 fi
 cd ..
done
