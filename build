#!/bin/bash

LASTMOD=2023-03-01 # last modified

# the following env vars are passed along to the Makefile

export ASCIIDOCTOR_NODE=
export BOOK=
export GRAPH=
export LINKCHECK=
export NATLANG=en-us

# env vars local to this wrapper

ARGS=
FORCE=
HELP=
MINIHELP=
VERSION=

function displayhelp() {
  echo "Usage: build-pathway <options>"
  echo "  " --adocjs:
  echo "        " Use Node version of Asciidoctor \(experimental\)
  echo "  " --book, --pdf, -b:
  echo "        " Generate PDFs, including individual pages and workbooks
  echo "  " --deploy:
  echo "        " Deploy to web host
  echo "  " --force, --superforce, --super-force, -f, -F:
  echo "        " Regenerate doc tree from scratch
  echo "  " --graph, -g:
  echo "        " Generate dependency graph
  echo "  " --help, -h:
  echo "        " Display this help and exit
  echo "  " --lint, --verify-links, -l:
  echo "        " Verify all the links in the doc tree
  echo "  " --natlang L:
  echo "        " Build doc tree for natural language L. Default: en-us
  echo "  " --version, -v:
  echo "        " Display version and exit
  echo "  " -bf, -fb:
  echo "        " Combine -f and -b
}

while test $# -ne 0; do
  arg=$1; shift
  if test "$arg" = --adocjs; then
    ASCIIDOCTOR_NODE=yes
  elif test "$arg" = --book -o "$arg" = --pdf -o "$arg" = -b; then
    BOOK=yes
  elif test "$arg" = --deploy; then
    DEPLOY=yes
  elif test "$arg" = --force -o "$arg" = --superforce -o "$arg" = --super-force -o "$arg" = -f -o "$arg" = -F; then
    FORCE=yes
  elif test "$arg" = --graph -o "$arg" = -g; then
    GRAPH=yes
  elif test "$arg" = --help -o "$arg" = -h; then
    HELP=yes
  elif test "$arg" = --lint -o "$arg" = --verify-links -o "$arg" = -l; then
    LINKCHECK=yes
  elif test "$arg" = --natlang; then
    NATLANG=$1; shift
  elif test "$arg" = --version -o "$arg" = -v; then
    VERSION=yes
  elif test "$arg" = -bf -o "$arg" = -fb; then
    FORCE=yes; BOOK=yes
  else
    MINIHELP=yes
    if test "$arg" = --proglang; then
      shift; echo Ignoring option --proglang
    else
      echo Ignoring arg: $arg
    fi
  fi
done

test -n "$FORCE" && make clean

test -n "$HELP" && displayhelp && exit

test -n "$VERSION" && echo build version $LASTMOD && exit

test -n "$MINIHELP" && echo All courses built for all proglangs by default && echo

if test -n "$DEPLOY"; then
  test ! -d distribution && make
  make deploy
else
  make
fi
