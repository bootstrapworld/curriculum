#! /bin/bash

function process_assessments() {
  for d in "$@"; do
    for dd in $d/*; do
      if test -d $dd; then
        rm -f $dd/index.html
        rm -f $dd/quiz-style.css
        cp -pu node_modules/mdquiz/dist/lib.js $dd/
        cp -pu lib/quiz-files/* $dd/
      fi
    done
  done
}


for d in $(find distribution -type d -name assessments); do
  process_assessments $d
done

 if [[ " $* " == *" --clean "* ]]; then
   exit 0
 fi

node --input-type=module -e '
import react from "@vitejs/plugin-react"
import { defineConfig, build } from "vite"
import { viteSingleFile } from "vite-plugin-singlefile"
import { viteStaticCopy } from "vite-plugin-static-copy";
import { glob } from "glob";

const quizzes = glob.sync("distribution/*/lessons/*/assessments/*");
const imageTypes = ["svg", "gif", "jpg", "png", "svg"];

// create the JSON objects for each of our quizzes
const buildConfigs = quizzes.map( quiz => ({
  plugins: [
    react(), 
    viteSingleFile(),
/*
    // copy all image files from demo/, since they are not inlined
    viteStaticCopy({
      targets: [
        {
          src: imageTypes.map(t => quiz+"/*."+t),
          dest: quiz+"/images"
        }
      ]
    })
*/    
  ],
  build: {
    root: "distribution",
    minify: false,
    outDir: "./",
    emptyOutDir: false,
    rollupOptions: {
      input: quiz+"/index.html",
    }
  }
}));

//console.log(JSON.stringify(buildConfigs, null, 2))

// wait until all of the builds are complete
await Promise.all(buildConfigs.map( async c => await build(c)));
'
