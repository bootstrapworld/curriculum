#!/bin/bash

eval $(grep '^SEMESTER=' ./deploy-to-brown)
eval $(grep '^YEAR=' ./deploy-to-brown)
if test -n "$SEMESTER" -a -n "$YEAR"; then
  semesterYear=$SEMESTER$YEAR
else
  semesterYear=latest
fi
bootstraproot=https://bootstrapworld.org/materials/$semesterYear

SED=sed

if which gsed|grep -q .; then
  SED=gsed
fi

regenid=
proglang=pyret
lsn=

if test $# -eq 0; then
  echo build-slide needs a lesson argument
  exit
else
  while test $# -ne 0; do
    if test "$1" = -f; then
      regenid=1; shift
    elif test "$1" = --proglang; then
      shift; proglang="$1"; shift
    else
      lsn="$1"; shift
    fi
  done
fi

if test "$proglang" = wescheme; then
  lsn=$(echo $lsn|$SED -e 's/-wescheme$//')
  lsn=$lsn-wescheme
elif test "$proglang" = codap; then
  lsn=$(echo $lsn|$SED -e 's/-codap$//')
  lsn=$lsn-codap
fi

topdir=$(pwd)

export PROGDIR=$topdir/prog
templateSlidesId=1jAjRtOGXhxfTGOx4F1vKAXfxUxQj2RXyTgwNuiOa_-w

export PROGLANG=pyret

if test ! -d distribution; then
  echo WARNING: Did not find any built pathways
  exit
else
  cd distribution
fi

for natlang in *; do
  test -d $natlang || continue
  if test ! -d $natlang/lessons; then
    echo Missing lessons diry in distribution -- did you call build-pathway\?
    continue
  fi
  if test ! -d  $natlang/lessons/$lsn; then
    echo Lesson $natlang/lessons/$lsn not found in distribution
    continue
  fi
  cd $natlang/lessons/$lsn
  export BOOTSTRAPPREFIX="$bootstraproot/$natlang/lessons"
  export LESSON="$lsn"
  # echo Doing $LESSON
  PROGLANG=pyret
  repoLESSON=$LESSON
  if test -f .cached/.wescheme; then
    PROGLANG=wescheme
    repoLESSON=$(echo $LESSON|$SED -e 's/-wescheme$//')
  elif test -f .cached/.codap; then
    PROGLANG=codap
    repoLESSON=$(echo $LESSON|$SED -e 's/-codap$//')
  fi

  # echo PROGLANG is $PROGLANG

  idfile=slides-$PROGLANG.id

  if test ! $regenid; then
    if test -f "$idfile"; then
      read -p "This will REPLACE A PUBLIC FILE! Are you *sure* you want to rebuild slides for $lsn? (If not, use build-slide -f to make a new file id.) [yn] " goahead
      if test "$goahead" != y; then
        exit
      fi
    fi
  fi

  if test $regenid; then
    rm -f $idfile
  fi
  if test -f slides.md; then
    $PROGDIR/slides-preproc.rkt slides.md
    if test -f slides.mkd; then
      title=$(grep '^# ' slides.mkd|$SED -e 1q|$SED -e 's/^#  *//')
      title="AUTO-GEN:$title"
      if test -s "$idfile"; then
        id=$(cat "$idfile"|$SED -e 1q)
        # echo md2gslides with id $id
        node $topdir/node_modules/md2googleslides/bin/md2gslides.js slides.mkd -a "$id" -e -n -t "$title" -c $templateSlidesId --use-fileio > .tmp.txt
        # node $topdir/node_modules/md2googleslides/bin/md2gslides.js slides.mkd -a "$id" -e -n -t "$title" --use-fileio > .tmp.txt 2>.tmpe.txt
        if grep -q 'Unable to generate slides' .tmp.txt; then
          echo Slides failed for $LESSON/slides.mkd
          if grep -q 'must be less than the endIndex' .tmp.txt; then
            echo You likely have a slide with text preceding table
          fi
          cat .tmp.txt
        fi
        # rm .tmp.txt
      else
        # echo md2gslides without id
        $topdir/node_modules/md2googleslides/bin/md2gslides.js slides.mkd -n -t "$title" -c $templateSlidesId --use-fileio > .tmp.txt
        if grep -q 'Unable to generate slides' .tmp.txt; then
          echo Slides failed for $LESSON/slides.mkd
          if grep -q 'must be less than the endIndex' .tmp.txt; then
            echo You likely have a slide with text preceding table
          fi
          cat .tmp.txt
        else
          grep 'View your presentation at' .tmp.txt | $SED -e 's/.*docs\.google\.com\/presentation\/d\///' > "$idfile"
          cp "$idfile" $topdir/lessons/$repoLESSON/langs/$natlang/
          echo Remember to push lessons/$repoLESSON/langs/$natlang/$idfile to Git repo
        fi
      fi
      if test -f "$idfile"; then
        cat "$idfile"|$SED -e 1q|$SED -e 's/^/<a target="_blank" href="https:\/\/docs.google.com\/presentation\/d\//' > slides-$PROGLANG.html
        timestamp=$(date +%c)
        $SED -i -e 's/$/">Google Slides generated INSERTTIMESTAMP<\/a>/' slides-$PROGLANG.html
        $SED -i -e "s/INSERTTIMESTAMP/$timestamp/" slides-$PROGLANG.html
      fi
    else
      echo WARNING: slides.md failed preprocessing
    fi
  else
    echo WARNING: Lesson \'$LESSON\' doesn\'t have slides.md
  fi
  cd ../../..
done
